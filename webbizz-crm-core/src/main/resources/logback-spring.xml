<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <!-- logback 설정 로그 끄기, 활성화 시 설정 파일 오류도 감춰지므로 주의해서 사용해야 함 -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <!-- Spring Boot 공통 변환 룰 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <!-- Spring Profile 에 따라 로그 출력 정의 -->
    <springProperty scope="context" name="APPLICATION_NAME" source="spring.application.name" />
    <springProperty scope="context" name="SERVER_PORT" source="server.port" />

    <!-- 로그 패턴 -->
    <property name="LOG_DATEFORMAT_PATTERN" value="yyyy-MM-dd HH:mm:ss.SSS" />
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %clr([%-5.5SESSION %15.-15USER]){yellow} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } [%15.15t] %-40.40logger{39} : [%-12.12SESSION %18.-18USER] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />

    <property name="LOG_PATH" value="${LOG_PATH:-${user.dir}/build/logs}" />
    <property name="LOG_FILE" value="${LOG_FILE:-${APPLICATION_NAME}}" />

    <!-- 콘솔 로그 출력 정의 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="webbizz.crm.config.LogbackPatternLayout">
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 파일 로그 출력 정의 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="webbizz.crm.config.LogbackPatternLayout">
                <pattern>${FILE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
        <file>${LOG_PATH}/${LOG_FILE}.${SERVER_PORT}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 로그 파일 Rolling 명명 규칙, .gz 를 붙이면 Rolling 시 압축 -->
            <fileNamePattern>${LOG_PATH}/${LOG_FILE}.${SERVER_PORT}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize><!-- 개별 로그파일 최대 용량 (KB, MB, GB) -->
            <maxHistory>10</maxHistory><!-- %d{###}의 설정 값에 따라 Rolling 주기 결정: yyyy-MM-dd: #일동안 보관 -->
        </rollingPolicy>
    </appender>

    <!-- 에러 로그 파일 출력 정의 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="webbizz.crm.config.LogbackPatternLayout">
                <pattern>${FILE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
        <file>${LOG_PATH}/${LOG_FILE}.${SERVER_PORT}.error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_FILE}.${SERVER_PORT}.error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 로그 레벨 설정 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
        <appender-ref ref="ERROR" />
    </root>
</configuration>
